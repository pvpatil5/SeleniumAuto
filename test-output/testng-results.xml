<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="43283" started-at="2020-08-13T05:30:12Z" finished-at="2020-08-13T05:30:55Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="43283" started-at="2020-08-13T05:30:12Z" finished-at="2020-08-13T05:30:55Z">
      <class name="extentreport.CreateReport">
        <test-method status="PASS" signature="setup()[pri:0, instance:extentreport.CreateReport@91161c7]" name="setup" is-config="true" duration-ms="791" started-at="2020-08-13T05:30:12Z" finished-at="2020-08-13T05:30:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="launch()[pri:0, instance:extentreport.CreateReport@91161c7]" name="launch" is-config="true" duration-ms="27306" started-at="2020-08-13T05:30:13Z" finished-at="2020-08-13T05:30:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="getTitle()[pri:0, instance:extentreport.CreateReport@91161c7]" name="getTitle" duration-ms="39" started-at="2020-08-13T05:30:40Z" finished-at="2020-08-13T05:30:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method status="PASS" signature="endReport(org.testng.ITestResult)[pri:0, instance:extentreport.CreateReport@91161c7]" name="endReport" is-config="true" duration-ms="26" started-at="2020-08-13T05:30:40Z" finished-at="2020-08-13T05:30:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle status=SUCCESS method=CreateReport.getTitle()[pri:0, instance:extentreport.CreateReport@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="launch()[pri:0, instance:extentreport.CreateReport@91161c7]" name="launch" is-config="true" duration-ms="12298" started-at="2020-08-13T05:30:40Z" finished-at="2020-08-13T05:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="FAIL" signature="getTitle1()[pri:0, instance:extentreport.CreateReport@91161c7]" name="getTitle1" duration-ms="29" started-at="2020-08-13T05:30:53Z" finished-at="2020-08-13T05:30:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Facebook – log in or sign] but found [Facebook – log in or sign up]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Facebook – log in or sign] but found [Facebook – log in or sign up]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at extentreport.CreateReport.getTitle1(CreateReport.java:118)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle1 -->
        <test-method status="PASS" signature="endReport(org.testng.ITestResult)[pri:0, instance:extentreport.CreateReport@91161c7]" name="endReport" is-config="true" duration-ms="759" started-at="2020-08-13T05:30:53Z" finished-at="2020-08-13T05:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTitle1 status=FAILURE method=CreateReport.getTitle1()[pri:0, instance:extentreport.CreateReport@91161c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="flush()[pri:0, instance:extentreport.CreateReport@91161c7]" name="flush" is-config="true" duration-ms="1939" started-at="2020-08-13T05:30:53Z" finished-at="2020-08-13T05:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
      </class> <!-- extentreport.CreateReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
